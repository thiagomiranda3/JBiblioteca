/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Control.ControlePrincipal;
import Model.Associado;
import Model.Emprestimo;
import Model.Exemplar;
import Model.Publicacao;
import java.awt.CardLayout;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JToggleButton;
import javax.swing.ListSelectionModel;
import org.joda.time.DateTime;
import org.joda.time.Days;

/**
 *
 * @author thiago
 */
public class LimitePrincipal extends javax.swing.JFrame implements WindowListener {

    ControlePrincipal objCtrPrincipal;
    SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
    Date data;

    //Strings de Controle
    String textStatus = new String();
    String textIsbnExemplar = new String();
    String textIsbnRE = new String();
    String textNumRE = new String();
    String textCodRE = new String();
    String textCodAssociadoRD = new String();
    String textIsbnRD = new String();
    String textNumRD = new String();

    //Objeto Entidades
    Associado objAssociado;
    Emprestimo objEmprestimo;
    Exemplar objExemplar;
    Publicacao objPublicacao;

    //Vetores de Entidades
    Vector vecAssociado;
    Vector vecEmprestimo;
    Vector vecExemplar;
    Vector vecPublicacao;

    /**
     * Creates new form LimitePrincipal
     *
     * @param ctrPrincipal
     */
    public LimitePrincipal(ControlePrincipal ctrPrincipal) {
        objCtrPrincipal = ctrPrincipal;
        vecAssociado = objCtrPrincipal.getObjCtrAssociado().getArrayAssociados();
        vecEmprestimo = objCtrPrincipal.getObjCtrEmprestimo().getArrayEmprestimo();
        vecExemplar = objCtrPrincipal.getObjCtrExemplar().getArrayExemplar();
        vecPublicacao = objCtrPrincipal.getObjCtrPublicacao().getArrayPublicacao();
        addWindowListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelSuperior = new javax.swing.JPanel();
        opcoesCombo = new javax.swing.JComboBox();
        painelCards = new javax.swing.JPanel();
        painelInicial = new javax.swing.JPanel();
        lbemVindo = new javax.swing.JLabel();
        ltrabFinal = new javax.swing.JLabel();
        lThiago = new javax.swing.JLabel();
        lSilvio = new javax.swing.JLabel();
        painelCA = new javax.swing.JPanel();
        textCodAssociado = new javax.swing.JTextField();
        textEndAssociado = new javax.swing.JTextField();
        textEmailAssociado = new javax.swing.JTextField();
        lcodigoAssociado = new javax.swing.JLabel();
        lenderecoAssociado = new javax.swing.JLabel();
        lemailAssociado = new javax.swing.JLabel();
        statusAssociado = new javax.swing.JLabel();
        PainelToggleAssociado = new javax.swing.JPanel();
        toggleGrad = new javax.swing.JToggleButton();
        togglePos = new javax.swing.JToggleButton();
        toggleProf = new javax.swing.JToggleButton();
        enviarAssociado = new javax.swing.JButton();
        lnomeAssociado = new javax.swing.JLabel();
        textNomeAssociado = new javax.swing.JTextField();
        painelCP = new javax.swing.JPanel();
        lisbnPublicacao = new javax.swing.JLabel();
        ltituloPublicacao = new javax.swing.JLabel();
        lautorPublicacao = new javax.swing.JLabel();
        leditoraPublicacao = new javax.swing.JLabel();
        textISBNPublicacao = new javax.swing.JTextField();
        textTitPublicacao = new javax.swing.JTextField();
        textAutorPublicacao = new javax.swing.JTextField();
        textEditPublicacao = new javax.swing.JTextField();
        enviarPublicacao = new javax.swing.JButton();
        painelCE = new javax.swing.JPanel();
        enviarExemplar = new javax.swing.JButton();
        lisbnExemplar = new javax.swing.JLabel();
        lnumeroExemplar = new javax.swing.JLabel();
        lprecoExemplar = new javax.swing.JLabel();
        textNumExemplar = new javax.swing.JTextField();
        textPrecoExemplar = new javax.swing.JTextField();
        comboIsbnExemplar = new javax.swing.JComboBox();
        painelCOP = new javax.swing.JPanel();
        lIsbnCOP = new javax.swing.JLabel();
        comboIsbnCOP = new javax.swing.JComboBox();
        scrollIsbnCOP = new javax.swing.JScrollPane();
        listCOP = new javax.swing.JList();
        painelRE = new javax.swing.JPanel();
        enviarRE = new javax.swing.JButton();
        lcodigoRE = new javax.swing.JLabel();
        lnumeroRE = new javax.swing.JLabel();
        lisbnRE = new javax.swing.JLabel();
        comboNumRE = new javax.swing.JComboBox();
        comboCodRE = new javax.swing.JComboBox();
        comboIsbnRE = new javax.swing.JComboBox();
        ldataRE = new javax.swing.JLabel();
        textDataRE = new javax.swing.JTextField();
        painelRD = new javax.swing.JPanel();
        devolverRD = new javax.swing.JButton();
        lisbnRD = new javax.swing.JLabel();
        comboIsbnRD = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        comboNumRD = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        painelGRA = new javax.swing.JPanel();
        lrelatórioGRA = new javax.swing.JLabel();
        scrollGRA = new javax.swing.JScrollPane();
        listaGRA = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        opcoesCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Escolha uma opção abaixo", "Cadastrar Associado", "Cadastrar Publicação", "Cadastrar Exemplar", "Consultar Publicação", "Realizar Empréstimo", "Realizar Devolução", "Gerar Relatório de Atrasos" }));
        opcoesCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcoesComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelSuperiorLayout = new javax.swing.GroupLayout(painelSuperior);
        painelSuperior.setLayout(painelSuperiorLayout);
        painelSuperiorLayout.setHorizontalGroup(
            painelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelSuperiorLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(opcoesCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelSuperiorLayout.setVerticalGroup(
            painelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(opcoesCombo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        painelCards.setLayout(new java.awt.CardLayout());

        lbemVindo.setFont(new java.awt.Font("Ubuntu", 1, 36)); // NOI18N
        lbemVindo.setText("Seja Bem Vindo!");

        ltrabFinal.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        ltrabFinal.setText("Trabalho Final - COM220");

        lThiago.setText("Thiago Oliveira Miranda - 18650");

        lSilvio.setText("Silvio Lopes Rieiro Junior - 15603");

        javax.swing.GroupLayout painelInicialLayout = new javax.swing.GroupLayout(painelInicial);
        painelInicial.setLayout(painelInicialLayout);
        painelInicialLayout.setHorizontalGroup(
            painelInicialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelInicialLayout.createSequentialGroup()
                .addGroup(painelInicialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ltrabFinal)
                    .addGroup(painelInicialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(painelInicialLayout.createSequentialGroup()
                            .addGap(59, 59, 59)
                            .addComponent(lbemVindo))
                        .addGroup(painelInicialLayout.createSequentialGroup()
                            .addGap(84, 84, 84)
                            .addGroup(painelInicialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lSilvio)
                                .addComponent(lThiago)))))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        painelInicialLayout.setVerticalGroup(
            painelInicialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelInicialLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(lbemVindo)
                .addGap(18, 18, 18)
                .addComponent(ltrabFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(lThiago)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lSilvio)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        painelCards.add(painelInicial, "card2");

        textCodAssociado.setText("");

        textEndAssociado.setText("");

        textEmailAssociado.setText("");

        lcodigoAssociado.setText("Insira o Código:");

        lenderecoAssociado.setText("Insira o Endereço: ");

        lemailAssociado.setText("Insira o Email: ");

        statusAssociado.setText("Clique no Status:");

        toggleGrad.setText("Grad");
        toggleGrad.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                toggleGradItemStateChanged(evt);
            }
        });

        togglePos.setText("PosGrad");
        togglePos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                togglePosItemStateChanged(evt);
            }
        });

        toggleProf.setText("Prof");
        toggleProf.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                toggleProfItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout PainelToggleAssociadoLayout = new javax.swing.GroupLayout(PainelToggleAssociado);
        PainelToggleAssociado.setLayout(PainelToggleAssociadoLayout);
        PainelToggleAssociadoLayout.setHorizontalGroup(
            PainelToggleAssociadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelToggleAssociadoLayout.createSequentialGroup()
                .addComponent(toggleGrad)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(togglePos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(toggleProf))
        );
        PainelToggleAssociadoLayout.setVerticalGroup(
            PainelToggleAssociadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelToggleAssociadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(toggleGrad)
                .addComponent(togglePos)
                .addComponent(toggleProf))
        );

        enviarAssociado.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        enviarAssociado.setText("Enviar");
        enviarAssociado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enviarAssociadoActionPerformed(evt);
            }
        });

        lnomeAssociado.setText("Insira o Nome:");

        textNomeAssociado.setText("");

        javax.swing.GroupLayout painelCALayout = new javax.swing.GroupLayout(painelCA);
        painelCA.setLayout(painelCALayout);
        painelCALayout.setHorizontalGroup(
            painelCALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCALayout.createSequentialGroup()
                .addGroup(painelCALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelCALayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(painelCALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelCALayout.createSequentialGroup()
                                .addComponent(lenderecoAssociado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textEndAssociado))
                            .addGroup(painelCALayout.createSequentialGroup()
                                .addComponent(lcodigoAssociado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textCodAssociado))
                            .addGroup(painelCALayout.createSequentialGroup()
                                .addComponent(lemailAssociado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textEmailAssociado))
                            .addGroup(painelCALayout.createSequentialGroup()
                                .addComponent(statusAssociado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PainelToggleAssociado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 79, Short.MAX_VALUE))))
                    .addGroup(painelCALayout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(enviarAssociado)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(painelCALayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lnomeAssociado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textNomeAssociado)))
                .addContainerGap())
        );
        painelCALayout.setVerticalGroup(
            painelCALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCALayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(painelCALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lnomeAssociado, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textNomeAssociado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lcodigoAssociado, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textCodAssociado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textEndAssociado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lenderecoAssociado, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lemailAssociado, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textEmailAssociado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(statusAssociado, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(PainelToggleAssociado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(enviarAssociado, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        painelCards.add(painelCA, "card3");

        lisbnPublicacao.setText("Insira o ISBN:");

        ltituloPublicacao.setText("Insira o Título:");

        lautorPublicacao.setText("Insira o Autor:");

        leditoraPublicacao.setText("Insira a Editora:");

        enviarPublicacao.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        enviarPublicacao.setText("Enviar");
        enviarPublicacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enviarPublicacaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelCPLayout = new javax.swing.GroupLayout(painelCP);
        painelCP.setLayout(painelCPLayout);
        painelCPLayout.setHorizontalGroup(
            painelCPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelCPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelCPLayout.createSequentialGroup()
                        .addGroup(painelCPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lisbnPublicacao)
                            .addComponent(ltituloPublicacao))
                        .addGap(11, 11, 11)
                        .addGroup(painelCPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textTitPublicacao)
                            .addComponent(textISBNPublicacao)))
                    .addGroup(painelCPLayout.createSequentialGroup()
                        .addComponent(leditoraPublicacao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textEditPublicacao))
                    .addGroup(painelCPLayout.createSequentialGroup()
                        .addComponent(lautorPublicacao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textAutorPublicacao)))
                .addContainerGap())
            .addGroup(painelCPLayout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(enviarPublicacao)
                .addContainerGap(160, Short.MAX_VALUE))
        );
        painelCPLayout.setVerticalGroup(
            painelCPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCPLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(painelCPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lisbnPublicacao, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textISBNPublicacao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textTitPublicacao)
                    .addComponent(ltituloPublicacao, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textAutorPublicacao)
                    .addComponent(lautorPublicacao, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(leditoraPublicacao, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textEditPublicacao, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(enviarPublicacao, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        painelCards.add(painelCP, "card4");

        enviarExemplar.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        enviarExemplar.setText("Enviar");
        enviarExemplar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enviarExemplarActionPerformed(evt);
            }
        });

        lisbnExemplar.setText("Escolha o ISBN:");

        lnumeroExemplar.setText("Insira o Número:");

        lprecoExemplar.setText("Insira o Preço:");

        textNumExemplar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textNumExemplarActionPerformed(evt);
            }
        });

        comboIsbnExemplar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Escolha o ISBN" }));
        comboIsbnExemplar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboIsbnExemplarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelCELayout = new javax.swing.GroupLayout(painelCE);
        painelCE.setLayout(painelCELayout);
        painelCELayout.setHorizontalGroup(
            painelCELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCELayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelCELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelCELayout.createSequentialGroup()
                        .addGroup(painelCELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lisbnExemplar)
                            .addComponent(lnumeroExemplar))
                        .addGroup(painelCELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelCELayout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(textNumExemplar))
                            .addGroup(painelCELayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboIsbnExemplar, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(painelCELayout.createSequentialGroup()
                        .addComponent(lprecoExemplar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textPrecoExemplar)))
                .addContainerGap())
            .addGroup(painelCELayout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(enviarExemplar)
                .addContainerGap(160, Short.MAX_VALUE))
        );
        painelCELayout.setVerticalGroup(
            painelCELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCELayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(painelCELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lisbnExemplar, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(comboIsbnExemplar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textNumExemplar)
                    .addComponent(lnumeroExemplar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textPrecoExemplar)
                    .addComponent(lprecoExemplar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(enviarExemplar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        painelCards.add(painelCE, "card5");

        lIsbnCOP.setText("Escolha o ISBN para consulta:");

        comboIsbnCOP.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Escolha o ISBN" }));
        comboIsbnCOP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboIsbnCOPActionPerformed(evt);
            }
        });

        scrollIsbnCOP.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        listCOP.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        scrollIsbnCOP.setViewportView(listCOP);

        javax.swing.GroupLayout painelCOPLayout = new javax.swing.GroupLayout(painelCOP);
        painelCOP.setLayout(painelCOPLayout);
        painelCOPLayout.setHorizontalGroup(
            painelCOPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCOPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelCOPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelCOPLayout.createSequentialGroup()
                        .addComponent(lIsbnCOP)
                        .addGap(18, 18, 18)
                        .addComponent(comboIsbnCOP, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 74, Short.MAX_VALUE))
                    .addComponent(scrollIsbnCOP, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        painelCOPLayout.setVerticalGroup(
            painelCOPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCOPLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(painelCOPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lIsbnCOP)
                    .addComponent(comboIsbnCOP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollIsbnCOP, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                .addContainerGap())
        );

        painelCards.add(painelCOP, "card6");

        enviarRE.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        enviarRE.setText("Realizar Empréstimo");
        enviarRE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enviarREActionPerformed(evt);
            }
        });

        lcodigoRE.setText("Escolha o Código do Associado:");

        lnumeroRE.setText("Escolha o Número do Exemplar:");

        lisbnRE.setText("Escolha o ISBN do Exemplar escolhido:");

        comboNumRE.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Escolha o ISBN" }));
        comboNumRE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboNumREActionPerformed(evt);
            }
        });

        comboCodRE.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Escolha o ISBN" }));
        comboCodRE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCodREActionPerformed(evt);
            }
        });

        comboIsbnRE.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Escolha o ISBN" }));
        comboIsbnRE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboIsbnREActionPerformed(evt);
            }
        });

        ldataRE.setText("Insira a Data:");

        textDataRE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textDataREActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelRELayout = new javax.swing.GroupLayout(painelRE);
        painelRE.setLayout(painelRELayout);
        painelRELayout.setHorizontalGroup(
            painelRELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelRELayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelRELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelRELayout.createSequentialGroup()
                        .addGroup(painelRELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelRELayout.createSequentialGroup()
                                .addComponent(lnumeroRE)
                                .addGap(18, 18, 18)
                                .addComponent(comboNumRE, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(painelRELayout.createSequentialGroup()
                                .addComponent(lisbnRE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboIsbnRE, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(painelRELayout.createSequentialGroup()
                                .addComponent(lcodigoRE)
                                .addGap(18, 18, 18)
                                .addComponent(comboCodRE, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(painelRELayout.createSequentialGroup()
                                .addComponent(ldataRE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textDataRE, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(35, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelRELayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(enviarRE)
                        .addGap(74, 74, 74))))
        );
        painelRELayout.setVerticalGroup(
            painelRELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelRELayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(painelRELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ldataRE, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textDataRE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelRELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lisbnRE, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboIsbnRE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelRELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lnumeroRE, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboNumRE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelRELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lcodigoRE, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboCodRE))
                .addGap(18, 18, 18)
                .addComponent(enviarRE, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        painelCards.add(painelRE, "card7");

        devolverRD.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        devolverRD.setText("Devolver Exemplar");
        devolverRD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                devolverRDActionPerformed(evt);
            }
        });

        lisbnRD.setText("Escolha o ISBN:");

        comboIsbnRD.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "" }));
        comboIsbnRD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboIsbnRDActionPerformed(evt);
            }
        });

        jLabel3.setText("Escolha o Número:");

        comboNumRD.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "" }));
        comboNumRD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboNumRDActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        jLabel1.setText("Devoluções");

        javax.swing.GroupLayout painelRDLayout = new javax.swing.GroupLayout(painelRD);
        painelRD.setLayout(painelRDLayout);
        painelRDLayout.setHorizontalGroup(
            painelRDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelRDLayout.createSequentialGroup()
                .addGroup(painelRDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelRDLayout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(devolverRD))
                    .addGroup(painelRDLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboNumRD, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelRDLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lisbnRD)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelRDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(comboIsbnRD, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(119, Short.MAX_VALUE))
        );
        painelRDLayout.setVerticalGroup(
            painelRDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelRDLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(painelRDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lisbnRD)
                    .addComponent(comboIsbnRD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(painelRDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboNumRD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addComponent(devolverRD)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        painelCards.add(painelRD, "card8");

        lrelatórioGRA.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        lrelatórioGRA.setText("Relatório de Atrasos");

        scrollGRA.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        listaGRA.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        scrollGRA.setViewportView(listaGRA);

        javax.swing.GroupLayout painelGRALayout = new javax.swing.GroupLayout(painelGRA);
        painelGRA.setLayout(painelGRALayout);
        painelGRALayout.setHorizontalGroup(
            painelGRALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelGRALayout.createSequentialGroup()
                .addContainerGap(116, Short.MAX_VALUE)
                .addComponent(lrelatórioGRA)
                .addGap(107, 107, 107))
            .addGroup(painelGRALayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollGRA)
                .addContainerGap())
        );
        painelGRALayout.setVerticalGroup(
            painelGRALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelGRALayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lrelatórioGRA)
                .addGap(18, 18, 18)
                .addComponent(scrollGRA, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                .addContainerGap())
        );

        painelCards.add(painelGRA, "card9");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelSuperior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(painelCards, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(painelSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelCards, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void opcoesComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcoesComboActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) painelCards.getLayout();
        if (evt.getSource() == opcoesCombo) {
            int option = opcoesCombo.getSelectedIndex();
            if (option == 0) {
                layout.show(painelCards, "card2");
            } else if (option == 1) {
                layout.show(painelCards, "card3");
            } else if (option == 2) {
                layout.show(painelCards, "card4");
            } else if (option == 3) {
                comboIsbnExemplar.removeAllItems();
                for (int i = 0; i < vecPublicacao.size(); i++) {
                    Publicacao tempPub = (Publicacao) vecPublicacao.get(i);
                    comboIsbnExemplar.addItem(Integer.toString(tempPub.getIsbn()));
                }
                layout.show(painelCards, "card5");
            } else if (option == 4) {
                comboIsbnCOP.removeAllItems();
                for (int i = 0; i < vecPublicacao.size(); i++) {
                    Publicacao tempPub = (Publicacao) vecPublicacao.get(i);
                    comboIsbnCOP.addItem(Integer.toString(tempPub.getIsbn()));
                }
                layout.show(painelCards, "card6");
            } else if (option == 5) {
                comboIsbnRE.removeAllItems();
                for (int i = 0; i < vecPublicacao.size(); i++) {
                    Publicacao tempPub = (Publicacao) vecPublicacao.get(i);
                    comboIsbnRE.addItem(Integer.toString(tempPub.getIsbn()));
                }
                comboCodRE.removeAllItems();
                for (int j = 0; j < vecAssociado.size(); j++) {
                    Associado tempAss = (Associado) vecAssociado.get(j);
                    comboCodRE.addItem(Integer.toString(tempAss.getCodigo()));
                }
                layout.show(painelCards, "card7");
            } else if (option == 6) {
                comboIsbnRD.removeAllItems();
                for (int i = 0; i < vecPublicacao.size(); i++) {
                    Publicacao tempPublicacao = (Publicacao) vecPublicacao.get(i);
                    comboIsbnRD.addItem(Integer.toString(tempPublicacao.getIsbn()));
                }
                layout.show(painelCards, "card8");
            } else if (option == 7) {
                DefaultListModel list = new DefaultListModel();
                listaGRA.removeAll();
                Date hoje = new Date();
                for (int i = 0; i < vecEmprestimo.size(); i++) {
                    Emprestimo tempEmprestimo = (Emprestimo) vecEmprestimo.get(i);
                    int dias = Days.daysBetween(new DateTime(tempEmprestimo.getData()), new DateTime(hoje)).getDays();
                    if (dias > 6) {
                        for (int j = 0; j < vecAssociado.size(); j++) {
                            Associado tempAssociado = (Associado) vecAssociado.get(j);
                            if (tempEmprestimo.getCodAssociado().equals(Integer.toString(tempAssociado.getCodigo()))) {
                                if (("Prof".equals(tempAssociado.getStatus())) && (dias > 14)) {
                                    list.addElement(("Exemplar: " + tempEmprestimo.getNumExemplar() + "    ISBN: " + tempEmprestimo.getIsbn() + "    Nome: " + tempAssociado.getNome() + "    Código: " + tempAssociado.getCodigo() + "    Status: " + tempAssociado.getStatus() + "    Multa: R$" + (dias - 13)));
                                } else if (("PosGrad".equals(tempAssociado.getStatus())) && (dias > 10)) {
                                    list.addElement(("Exemplar: " + tempEmprestimo.getNumExemplar() + "    ISBN: " + tempEmprestimo.getIsbn() + "    Nome: " + tempAssociado.getNome() + "    Código: " + tempAssociado.getCodigo() + "    Status: " + tempAssociado.getStatus() + "    Multa: R$" + (dias - 9)));
                                } else if ("Grad".equals(tempAssociado.getStatus())) {
                                    list.addElement(("Exemplar: " + tempEmprestimo.getNumExemplar() + "    ISBN: " + tempEmprestimo.getIsbn() + "    Nome: " + tempAssociado.getNome() + "    Código: " + tempAssociado.getCodigo() + "    Status: " + tempAssociado.getStatus() + "    Multa: R$" + (dias - 6)));
                                }
                            }
                        }
                    }
                }
                listaGRA.setModel(list);
                listaGRA.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
                layout.show(painelCards, "card9");
            }
        }
    }//GEN-LAST:event_opcoesComboActionPerformed

    private void toggleGradItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_toggleGradItemStateChanged
        // TODO add your handling code here:
        JToggleButton button = (JToggleButton) evt.getSource();
        if (button.isSelected()) {
            togglePos.setSelected(false);
            toggleProf.setSelected(false);
            textStatus = "Grad";
        }
    }//GEN-LAST:event_toggleGradItemStateChanged

    private void togglePosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_togglePosItemStateChanged
        // TODO add your handling code here:
        JToggleButton button = (JToggleButton) evt.getSource();
        if (button.isSelected()) {
            toggleGrad.setSelected(false);
            toggleProf.setSelected(false);
            textStatus = "PosGrad";
        }
    }//GEN-LAST:event_togglePosItemStateChanged

    private void toggleProfItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_toggleProfItemStateChanged
        // TODO add your handling code here:
        JToggleButton button = (JToggleButton) evt.getSource();
        if (button.isSelected()) {
            toggleGrad.setSelected(false);
            togglePos.setSelected(false);
            textStatus = "Prof";
        }
    }//GEN-LAST:event_toggleProfItemStateChanged

    private void enviarAssociadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enviarAssociadoActionPerformed
        // TODO add your handling code here:
        String ok = "ok";
        int tempCodigo = -1;

        if (textCodAssociado.getText().isEmpty()
                || textEmailAssociado.getText().isEmpty()
                || textEndAssociado.getText().isEmpty()
                || textStatus.isEmpty()
                || textNomeAssociado.getText().isEmpty()) {
            JOptionPane.showMessageDialog(painelCards, "Por favor, preencha todos os campos", "Erro no Cadastro", JOptionPane.ERROR_MESSAGE);
            ok = "ops";
        }

        if ("ok".equals(ok)) {
            try {
                tempCodigo = Integer.parseInt(textCodAssociado.getText());
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(painelCards, "Código deve ser composto apenas por números", "Erro no Cadastro", JOptionPane.ERROR_MESSAGE);
                ok = "ops";
            }
        }

        if ("ok".equals(ok)) {
            for (int i = 0; i < vecAssociado.size(); i++) {
                Associado temp = (Associado) vecAssociado.get(i);
                if (temp.getCodigo() == tempCodigo) {
                    ok = "existe";
                }
            }
        }

        if ("ok".equals(ok)) {
            objAssociado = new Associado();
            objAssociado.setCodigo(tempCodigo);
            objAssociado.setEmail(textEmailAssociado.getText());
            objAssociado.setEndereco(textEndAssociado.getText());
            objAssociado.setStatus(textStatus);
            objAssociado.setNome(textNomeAssociado.getText());
            vecAssociado.add(objAssociado);
            objCtrPrincipal.getObjCtrAssociado().setArrayAssociados(vecAssociado);
            JOptionPane.showMessageDialog(painelCards, "Associado cadastrado com sucesso", "Cadastro Realizado", JOptionPane.INFORMATION_MESSAGE);
            textCodAssociado.setText("");
            textEmailAssociado.setText("");
            textEndAssociado.setText("");
            textNomeAssociado.setText("");
            toggleGrad.setSelected(false);
            togglePos.setSelected(false);
            toggleProf.setSelected(false);
            textStatus = "";
        } else if ("existe".equals(ok)) {
            JOptionPane.showMessageDialog(painelCards, "Associado já cadastrado", "Erro no Cadastro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_enviarAssociadoActionPerformed

    private void enviarPublicacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enviarPublicacaoActionPerformed
        // TODO add your handling code here:
        String ok = "ok";
        int tempISBN = -1;

        if (textAutorPublicacao.getText().isEmpty()
                || textEditPublicacao.getText().isEmpty()
                || textISBNPublicacao.getText().isEmpty()
                || textTitPublicacao.getText().isEmpty()) {
            JOptionPane.showMessageDialog(painelCards, "Por favor, preencha todos os campos", "Erro no Cadastro", JOptionPane.ERROR_MESSAGE);
            ok = "ops";
        }

        if ("ok".equals(ok)) {
            try {
                tempISBN = Integer.parseInt(textISBNPublicacao.getText());
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(painelCards, "ISBN deve ser composto apenas por números", "Erro no Cadastro", JOptionPane.ERROR_MESSAGE);
                ok = "ops";
            }
        }

        if ("ok".equals(ok)) {
            for (int i = 0; i < vecPublicacao.size(); i++) {
                Publicacao temp = (Publicacao) vecPublicacao.get(i);
                if (temp.getIsbn() == tempISBN) {
                    ok = "existe";
                }
            }
        }

        if ("ok".equals(ok)) {
            objPublicacao = new Publicacao();
            objPublicacao.setAutor(textAutorPublicacao.getText());
            objPublicacao.setIsbn(tempISBN);
            objPublicacao.setEditora(textEditPublicacao.getText());
            objPublicacao.setTitulo(textTitPublicacao.getText());
            vecPublicacao.add(objPublicacao);
            objCtrPrincipal.getObjCtrPublicacao().setArrayPublicacao(vecPublicacao);
            JOptionPane.showMessageDialog(painelCards, "Publicação cadastrada com sucesso", "Cadastro Realizado", JOptionPane.INFORMATION_MESSAGE);
            textAutorPublicacao.setText("");
            textEditPublicacao.setText("");
            textISBNPublicacao.setText("");
            textTitPublicacao.setText("");
        } else if ("existe".equals(ok)) {
            JOptionPane.showMessageDialog(painelCards, "Publicação já cadastrada", "Erro no Cadastro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_enviarPublicacaoActionPerformed

    private void enviarExemplarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enviarExemplarActionPerformed
        // TODO add your handling code here:
        String ok = "ok";
        int tempNum = -1, tempPreco = -1;

        try {
            if (textNumExemplar.getText().isEmpty()
                    || textPrecoExemplar.getText().isEmpty()
                    || textIsbnExemplar.isEmpty()) {
                JOptionPane.showMessageDialog(painelCards, "Por favor, preencha todos os campos", "Erro no Cadastro", JOptionPane.ERROR_MESSAGE);
                ok = "ops";
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(painelCards, "Por favor, preencha todos os campos", "Erro no Cadastro", JOptionPane.ERROR_MESSAGE);
            ok = "ops";
        }

        if ("ok".equals(ok)) {
            try {
                tempNum = Integer.parseInt(textNumExemplar.getText());
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(painelCards, "Número deve ser composto apenas por números", "Erro no Cadastro", JOptionPane.ERROR_MESSAGE);
                ok = "ops";
            }
        }

        if ("ok".equals(ok)) {
            try {
                tempPreco = Integer.parseInt(textPrecoExemplar.getText());
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(painelCards, "Preço deve ser composto apenas por números", "Erro no Cadastro", JOptionPane.ERROR_MESSAGE);
                ok = "ops";
            }
        }

        if ("ok".equals(ok)) {
            for (int i = 0; i < vecExemplar.size(); i++) {
                Exemplar temp = (Exemplar) vecExemplar.get(i);
                if ((temp.getNumero() == tempNum) && temp.getIsbn().equals(textIsbnExemplar)) {
                    ok = "existe";
                }
            }
        }

        if ("ok".equals(ok)) {
            objExemplar = new Exemplar();
            objExemplar.setIsbn(textIsbnExemplar);
            objExemplar.setNumero(tempNum);
            objExemplar.setPreco(tempPreco);
            vecExemplar.add(objExemplar);
            objCtrPrincipal.getObjCtrExemplar().setArrayExemplar(vecExemplar);
            JOptionPane.showMessageDialog(painelCards, "Exemplar cadastrado com sucesso", "Cadastro Realizado", JOptionPane.INFORMATION_MESSAGE);
            textIsbnExemplar = "";
            textNumExemplar.setText("");
            textPrecoExemplar.setText("");
            comboIsbnExemplar.setSelectedIndex(0);
        } else if ("existe".equals(ok)) {
            JOptionPane.showMessageDialog(painelCards, "Exemplar já cadastrado", "Erro no Cadastro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_enviarExemplarActionPerformed

    private void comboIsbnExemplarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboIsbnExemplarActionPerformed
        // TODO add your handling code here:
        JComboBox tempCombo = (JComboBox) evt.getSource();
        textIsbnExemplar = (String) tempCombo.getSelectedItem();
    }//GEN-LAST:event_comboIsbnExemplarActionPerformed

    private void enviarREActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enviarREActionPerformed
        // TODO add your handling code here:
        String ok = "ok";

        try {
            if (textNumRE.isEmpty()
                    || textCodRE.isEmpty()
                    || textDataRE.getText().isEmpty()
                    || textIsbnRE.isEmpty()) {
                JOptionPane.showMessageDialog(painelCards, "Por favor, preencha todos os campos", "Erro no Cadastro", JOptionPane.ERROR_MESSAGE);
                ok = "ops";
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(painelCards, "Por favor, preencha todos os campos", "Erro no Cadastro", JOptionPane.ERROR_MESSAGE);
            ok = "ops";
        }

        if ("ok".equals(ok)) {
            try {
                data = format.parse(textDataRE.getText());
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(painelCards, "Digite a data no formato: dd/MM/aaaa", "Erro no Cadastro", JOptionPane.ERROR_MESSAGE);
                ok = "ops";
            }
        }

        if ("ok".equals(ok)) {
            for (int i = 0; i < vecExemplar.size(); i++) {
                Exemplar tempExe = (Exemplar) vecExemplar.get(i);
                if ((Integer.toString(tempExe.getNumero()).equals(textNumRE)) && tempExe.getIsbn().equals(textIsbnRE)) {
                    if (tempExe.isEmprestado()) {
                        JOptionPane.showMessageDialog(painelCards, "Exemplar já esta emprestado", "Erro no Cadastro", JOptionPane.ERROR_MESSAGE);
                        break;
                    } else {
                        tempExe.setEmprestado(true);
                        vecExemplar.removeElementAt(i);
                        vecExemplar.add(i, tempExe);
                        Emprestimo tempEmprestimo = new Emprestimo();
                        tempEmprestimo.setCodAssociado(textCodRE);
                        tempEmprestimo.setData(data);
                        tempEmprestimo.setIsbn(textIsbnRE);
                        tempEmprestimo.setNumExemplar(textNumRE);
                        JOptionPane.showMessageDialog(painelCards, "Empréstimo cadastrado com sucesso", "Cadastro Realizado", JOptionPane.INFORMATION_MESSAGE);
                        vecEmprestimo.add(tempEmprestimo);
                        break;
                    }
                }
            }
        }
    }//GEN-LAST:event_enviarREActionPerformed

    private void comboNumREActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboNumREActionPerformed
        // TODO add your handling code here:
        //Número de RE
        JComboBox tempCombo = (JComboBox) evt.getSource();
        textNumRE = (String) tempCombo.getSelectedItem();
    }//GEN-LAST:event_comboNumREActionPerformed

    private void comboCodREActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCodREActionPerformed
        // TODO add your handling code here:
        JComboBox tempCombo = (JComboBox) evt.getSource();
        textCodRE = (String) tempCombo.getSelectedItem();
    }//GEN-LAST:event_comboCodREActionPerformed

    private void comboIsbnREActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboIsbnREActionPerformed
        // TODO add your handling code here:
        JComboBox tempCombo = (JComboBox) evt.getSource();
        String tempIsbn = (String) tempCombo.getSelectedItem();

        comboNumRE.removeAllItems();
        for (int i = 0; i < vecExemplar.size(); i++) {
            Exemplar tempExe = (Exemplar) vecExemplar.get(i);
            if (tempExe.getIsbn().equals(tempIsbn)) {
                comboNumRE.addItem(Integer.toString(tempExe.getNumero()));
            }
        }
        textIsbnRE = (String) tempCombo.getSelectedItem();
    }//GEN-LAST:event_comboIsbnREActionPerformed

    private void textNumExemplarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textNumExemplarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textNumExemplarActionPerformed

    private void textDataREActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textDataREActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textDataREActionPerformed

    private void comboIsbnCOPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboIsbnCOPActionPerformed
        // TODO add your handling code here:
        JComboBox tempCombo = (JComboBox) evt.getSource();
        String tempIsbn = (String) tempCombo.getSelectedItem();
        String emp = new String();
        DefaultListModel list = new DefaultListModel();
        listCOP.removeAll();
        for (int i = 0; i < vecExemplar.size(); i++) {
            Exemplar tempExemplar = (Exemplar) vecExemplar.get(i);
            if (tempExemplar.isEmprestado()) {
                emp = "Emprestado";
            } else {
                emp = "Disponível";
            }
            if (tempExemplar.getIsbn().equals(tempIsbn)) {
                list.addElement(new String("Exemplar: " + tempExemplar.getNumero() + "    Preço: " + tempExemplar.getPreco() + "    " + emp));
            }
        }
        listCOP.setModel(list);
        listCOP.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }//GEN-LAST:event_comboIsbnCOPActionPerformed

    private void devolverRDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_devolverRDActionPerformed
        // TODO add your handling code here:
        String ok = "ok";
        Date hoje = new Date();

        try {
            if (textIsbnRD.isEmpty()
                    || textNumRD.isEmpty()) {
                JOptionPane.showMessageDialog(painelCards, "Por favor, preencha todos os campos", "Erro no Cadastro", JOptionPane.ERROR_MESSAGE);
                ok = "ops";
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(painelCards, "Por favor, preencha todos os campos", "Erro no Cadastro", JOptionPane.ERROR_MESSAGE);
            ok = "ops";
        }

        if ("ok".equals(ok)) {
            for (int i = 0; i < vecEmprestimo.size(); i++) {
                Emprestimo tempEmprestimo = (Emprestimo) vecEmprestimo.get(i);
                if (tempEmprestimo.getIsbn().equals(textIsbnRD)
                        && tempEmprestimo.getNumExemplar().equals(textNumRD)) {
                    int dias = Days.daysBetween(new DateTime(tempEmprestimo.getData()), new DateTime(hoje)).getDays();

                    if (dias > 6) {
                        for (int j = 0; j < vecAssociado.size(); j++) {
                            Associado tempAssociado = (Associado) vecAssociado.get(j);
                            if (tempEmprestimo.getCodAssociado().equals(Integer.toString(tempAssociado.getCodigo()))) {
                                if (("Prof".equals(tempAssociado.getStatus())) && (dias > 14)) {
                                    JOptionPane.showMessageDialog(painelCards, "Devolução Realizada\nMulta total de: R& " + (dias - 13), "Devolução", JOptionPane.INFORMATION_MESSAGE);
                                } else if (("PosGrad".equals(tempAssociado.getStatus())) && (dias > 10)) {
                                    JOptionPane.showMessageDialog(painelCards, "Devolução Realizada\nMulta total de: R$ " + (dias - 9), "Devolução", JOptionPane.INFORMATION_MESSAGE);
                                } else if ("Grad".equals(tempAssociado.getStatus())) {
                                    JOptionPane.showMessageDialog(painelCards, "Devolução Realizada\nMulta total de: R$" + (dias - 6), "Devolução", JOptionPane.INFORMATION_MESSAGE);
                                }
                            }
                        }
                    } else {
                        for (int j = 0; j < vecAssociado.size(); j++) {
                            Associado tempAssociado = (Associado) vecAssociado.get(j);
                            if (tempEmprestimo.getCodAssociado().equals(Integer.toString(tempAssociado.getCodigo()))) {
                                JOptionPane.showMessageDialog(painelCards, "Devolução Realizada\nNão Possui Multas", "Devolução", JOptionPane.INFORMATION_MESSAGE);
                            }
                        }
                    }

                    vecEmprestimo.remove(i);
                    for (int j = 0; j < vecExemplar.size(); j++) {
                        Exemplar tempExemplar = (Exemplar) vecExemplar.get(j);
                        if (tempExemplar.getIsbn().equals(textIsbnRD)
                                && (tempExemplar.getNumero() == Integer.parseInt(textNumRD))) {
                            tempExemplar.setEmprestado(false);
                            vecExemplar.remove(j);
                            vecExemplar.add(j, tempExemplar);
                            break;
                        }
                    }
                    break;
                }
            }
        }
    }//GEN-LAST:event_devolverRDActionPerformed

    private void comboIsbnRDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboIsbnRDActionPerformed
        // TODO add your handling code here:
        JComboBox tempCombo = (JComboBox) evt.getSource();
        String tempISBN = (String) tempCombo.getSelectedItem();

        comboNumRD.removeAllItems();
        for (int i = 0; i < vecEmprestimo.size(); i++) {
            Emprestimo tempEmprestimo = (Emprestimo) vecEmprestimo.get(i);
            if (tempEmprestimo.getIsbn().equals(tempISBN)) {
                comboNumRD.addItem(tempEmprestimo.getNumExemplar());
            }
        }
        textIsbnRD = (String) tempCombo.getSelectedItem();
    }//GEN-LAST:event_comboIsbnRDActionPerformed

    private void comboNumRDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboNumRDActionPerformed
        // TODO add your handling code here:
        JComboBox tempCombo = (JComboBox) evt.getSource();
        textNumRD = (String) tempCombo.getSelectedItem();
    }//GEN-LAST:event_comboNumRDActionPerformed

    public void janela() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LimitePrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                initComponents();
                setResizable(false);
                setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PainelToggleAssociado;
    private javax.swing.JComboBox comboCodRE;
    private javax.swing.JComboBox comboIsbnCOP;
    private javax.swing.JComboBox comboIsbnExemplar;
    private javax.swing.JComboBox comboIsbnRD;
    private javax.swing.JComboBox comboIsbnRE;
    private javax.swing.JComboBox comboNumRD;
    private javax.swing.JComboBox comboNumRE;
    private javax.swing.JButton devolverRD;
    private javax.swing.JButton enviarAssociado;
    private javax.swing.JButton enviarExemplar;
    private javax.swing.JButton enviarPublicacao;
    private javax.swing.JButton enviarRE;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lIsbnCOP;
    private javax.swing.JLabel lSilvio;
    private javax.swing.JLabel lThiago;
    private javax.swing.JLabel lautorPublicacao;
    private javax.swing.JLabel lbemVindo;
    private javax.swing.JLabel lcodigoAssociado;
    private javax.swing.JLabel lcodigoRE;
    private javax.swing.JLabel ldataRE;
    private javax.swing.JLabel leditoraPublicacao;
    private javax.swing.JLabel lemailAssociado;
    private javax.swing.JLabel lenderecoAssociado;
    private javax.swing.JLabel lisbnExemplar;
    private javax.swing.JLabel lisbnPublicacao;
    private javax.swing.JLabel lisbnRD;
    private javax.swing.JLabel lisbnRE;
    private javax.swing.JList listCOP;
    private javax.swing.JList listaGRA;
    private javax.swing.JLabel lnomeAssociado;
    private javax.swing.JLabel lnumeroExemplar;
    private javax.swing.JLabel lnumeroRE;
    private javax.swing.JLabel lprecoExemplar;
    private javax.swing.JLabel lrelatórioGRA;
    private javax.swing.JLabel ltituloPublicacao;
    private javax.swing.JLabel ltrabFinal;
    private javax.swing.JComboBox opcoesCombo;
    private javax.swing.JPanel painelCA;
    private javax.swing.JPanel painelCE;
    private javax.swing.JPanel painelCOP;
    private javax.swing.JPanel painelCP;
    private javax.swing.JPanel painelCards;
    private javax.swing.JPanel painelGRA;
    private javax.swing.JPanel painelInicial;
    private javax.swing.JPanel painelRD;
    private javax.swing.JPanel painelRE;
    private javax.swing.JPanel painelSuperior;
    private javax.swing.JScrollPane scrollGRA;
    private javax.swing.JScrollPane scrollIsbnCOP;
    private javax.swing.JLabel statusAssociado;
    private javax.swing.JTextField textAutorPublicacao;
    private javax.swing.JTextField textCodAssociado;
    private javax.swing.JTextField textDataRE;
    private javax.swing.JTextField textEditPublicacao;
    private javax.swing.JTextField textEmailAssociado;
    private javax.swing.JTextField textEndAssociado;
    private javax.swing.JTextField textISBNPublicacao;
    private javax.swing.JTextField textNomeAssociado;
    private javax.swing.JTextField textNumExemplar;
    private javax.swing.JTextField textPrecoExemplar;
    private javax.swing.JTextField textTitPublicacao;
    private javax.swing.JToggleButton toggleGrad;
    private javax.swing.JToggleButton togglePos;
    private javax.swing.JToggleButton toggleProf;
    // End of variables declaration//GEN-END:variables

    @Override
    public void windowOpened(WindowEvent e) {
    }

    @Override
    public void windowClosing(WindowEvent e) {
        int i = JOptionPane.showConfirmDialog(painelCards, "Deseja realmente sair?", "Saindo", JOptionPane.OK_CANCEL_OPTION);
        if (i == 0) {
            try {
                objCtrPrincipal.getObjCtrAssociado().finalizar();
                objCtrPrincipal.getObjCtrEmprestimo().finalizar();
                objCtrPrincipal.getObjCtrExemplar().finalizar();
                objCtrPrincipal.getObjCtrPublicacao().finalizar();
            } catch (Exception ex) {
                Logger.getLogger(LimitePrincipal.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
            dispose();
        }
    }

    @Override
    public void windowClosed(WindowEvent e) {
    }

    @Override
    public void windowIconified(WindowEvent e) {
    }

    @Override
    public void windowDeiconified(WindowEvent e) {
    }

    @Override
    public void windowActivated(WindowEvent e) {
    }

    @Override
    public void windowDeactivated(WindowEvent e) {
    }
}
